{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\GitHub\\\\discord-clone-app\\\\client\\\\src\\\\components\\\\ChannelSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useChatContext } from \"stream-chat-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelSearch = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const getChannels = async text => {\n    try {//TODO; fetch channels\n    } catch (error) {\n      setQuery(\"\");\n    }\n  };\n\n  const onSearch = event => {\n    event.preventDefault();\n    setLoading(true);\n    setQuery(event.target.value);\n    getChannels(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-search__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-search__input__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-search__input__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"channel-search__input__text\",\n        placeholder: \"Search\",\n        type: \"text\",\n        value: query,\n        onChange: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChannelSearch, \"CBYMxLXn1N4wOnVZ5PYxfC4QuOI=\");\n\n_c = ChannelSearch;\nexport default ChannelSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelSearch\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/GitHub/discord-clone-app/client/src/components/ChannelSearch.jsx"],"names":["React","useEffect","useState","useChatContext","ChannelSearch","query","setQuery","loading","setLoading","getChannels","text","error","onSearch","event","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClC,QAAI,CACF;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdL,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAND;;AAOA,QAAMM,QAAQ,GAAIC,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAACO,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACAP,IAAAA,WAAW,CAACI,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAX;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,EAAC,6BADZ;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAEX,KAJT;AAKE,QAAA,QAAQ,EAAEO;AALZ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlCD;;GAAMR,a;;KAAAA,a;AAoCN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useChatContext } from \"stream-chat-react\";\r\n\r\nconst ChannelSearch = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [loading, setLoading] = useState(\"\");\r\n\r\n  const getChannels = async (text) => {\r\n    try {\r\n      //TODO; fetch channels\r\n    } catch (error) {\r\n      setQuery(\"\");\r\n    }\r\n  };\r\n  const onSearch = (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setQuery(event.target.value);\r\n    getChannels(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"channel-search__container\">\r\n      <div className=\"channel-search__input__wrapper\">\r\n        <div className=\"channel-search__input__icon\">\r\n          {/* Decide Icon to show */}\r\n        </div>\r\n        <input\r\n          className=\"channel-search__input__text\"\r\n          placeholder=\"Search\"\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={onSearch}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChannelSearch;\r\n"]},"metadata":{},"sourceType":"module"}