{"ast":null,"code":"import React from 'react';\nimport { FilePreviewer, ImagePreviewer } from 'react-file-utils';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nexport var UploadsPreview = function () {\n  var _a = useChannelStateContext('UploadsPreview'),\n      maxNumberOfFiles = _a.maxNumberOfFiles,\n      multipleUploads = _a.multipleUploads;\n\n  var messageInput = useMessageInputContext('UploadsPreview');\n  var fileOrder = messageInput.fileOrder,\n      fileUploads = messageInput.fileUploads,\n      imageOrder = messageInput.imageOrder,\n      imageUploads = messageInput.imageUploads,\n      numberOfUploads = messageInput.numberOfUploads,\n      removeFile = messageInput.removeFile,\n      removeImage = messageInput.removeImage,\n      uploadFile = messageInput.uploadFile,\n      uploadImage = messageInput.uploadImage,\n      uploadNewFiles = messageInput.uploadNewFiles;\n  var imagesToPreview = imageOrder.map(function (id) {\n    return imageUploads[id];\n  });\n  var filesToPreview = fileOrder.map(function (id) {\n    return fileUploads[id];\n  });\n  return React.createElement(React.Fragment, null, imageOrder.length > 0 && React.createElement(ImagePreviewer, {\n    disabled: !multipleUploads || maxNumberOfFiles !== undefined && numberOfUploads >= maxNumberOfFiles,\n    handleFiles: uploadNewFiles,\n    handleRemove: removeImage,\n    handleRetry: uploadImage,\n    imageUploads: imagesToPreview,\n    multiple: multipleUploads\n  }), fileOrder.length > 0 && React.createElement(FilePreviewer, {\n    handleFiles: uploadNewFiles,\n    handleRemove: removeFile,\n    handleRetry: uploadFile,\n    uploads: filesToPreview\n  }));\n};","map":{"version":3,"sources":["C:/Users/Usuario/Documents/GitHub/discord-clone-app/client/node_modules/stream-chat-react/dist/components/MessageInput/UploadsPreview.js"],"names":["React","FilePreviewer","ImagePreviewer","useChannelStateContext","useMessageInputContext","UploadsPreview","_a","maxNumberOfFiles","multipleUploads","messageInput","fileOrder","fileUploads","imageOrder","imageUploads","numberOfUploads","removeFile","removeImage","uploadFile","uploadImage","uploadNewFiles","imagesToPreview","map","id","filesToPreview","createElement","Fragment","length","disabled","undefined","handleFiles","handleRemove","handleRetry","multiple","uploads"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,kBAA9C;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,OAAO,IAAIC,cAAc,GAAG,YAAY;AACpC,MAAIC,EAAE,GAAGH,sBAAsB,CAAC,gBAAD,CAA/B;AAAA,MAAmDI,gBAAgB,GAAGD,EAAE,CAACC,gBAAzE;AAAA,MAA2FC,eAAe,GAAGF,EAAE,CAACE,eAAhH;;AACA,MAAIC,YAAY,GAAGL,sBAAsB,CAAC,gBAAD,CAAzC;AACA,MAAIM,SAAS,GAAGD,YAAY,CAACC,SAA7B;AAAA,MAAwCC,WAAW,GAAGF,YAAY,CAACE,WAAnE;AAAA,MAAgFC,UAAU,GAAGH,YAAY,CAACG,UAA1G;AAAA,MAAsHC,YAAY,GAAGJ,YAAY,CAACI,YAAlJ;AAAA,MAAgKC,eAAe,GAAGL,YAAY,CAACK,eAA/L;AAAA,MAAgNC,UAAU,GAAGN,YAAY,CAACM,UAA1O;AAAA,MAAsPC,WAAW,GAAGP,YAAY,CAACO,WAAjR;AAAA,MAA8RC,UAAU,GAAGR,YAAY,CAACQ,UAAxT;AAAA,MAAoUC,WAAW,GAAGT,YAAY,CAACS,WAA/V;AAAA,MAA4WC,cAAc,GAAGV,YAAY,CAACU,cAA1Y;AACA,MAAIC,eAAe,GAAGR,UAAU,CAACS,GAAX,CAAe,UAAUC,EAAV,EAAc;AAAE,WAAOT,YAAY,CAACS,EAAD,CAAnB;AAA0B,GAAzD,CAAtB;AACA,MAAIC,cAAc,GAAGb,SAAS,CAACW,GAAV,CAAc,UAAUC,EAAV,EAAc;AAAE,WAAOX,WAAW,CAACW,EAAD,CAAlB;AAAyB,GAAvD,CAArB;AACA,SAAQtB,KAAK,CAACwB,aAAN,CAAoBxB,KAAK,CAACyB,QAA1B,EAAoC,IAApC,EACJb,UAAU,CAACc,MAAX,GAAoB,CAApB,IAA0B1B,KAAK,CAACwB,aAAN,CAAoBtB,cAApB,EAAoC;AAAEyB,IAAAA,QAAQ,EAAE,CAACnB,eAAD,IACjED,gBAAgB,KAAKqB,SAArB,IAAkCd,eAAe,IAAIP,gBADA;AACmBsB,IAAAA,WAAW,EAAEV,cADhC;AACgDW,IAAAA,YAAY,EAAEd,WAD9D;AAC2Ee,IAAAA,WAAW,EAAEb,WADxF;AACqGL,IAAAA,YAAY,EAAEO,eADnH;AACoIY,IAAAA,QAAQ,EAAExB;AAD9I,GAApC,CADtB,EAGJE,SAAS,CAACgB,MAAV,GAAmB,CAAnB,IAAyB1B,KAAK,CAACwB,aAAN,CAAoBvB,aAApB,EAAmC;AAAE4B,IAAAA,WAAW,EAAEV,cAAf;AAA+BW,IAAAA,YAAY,EAAEf,UAA7C;AAAyDgB,IAAAA,WAAW,EAAEd,UAAtE;AAAkFgB,IAAAA,OAAO,EAAEV;AAA3F,GAAnC,CAHrB,CAAR;AAIH,CAVM","sourcesContent":["import React from 'react';\nimport { FilePreviewer, ImagePreviewer } from 'react-file-utils';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nexport var UploadsPreview = function () {\n    var _a = useChannelStateContext('UploadsPreview'), maxNumberOfFiles = _a.maxNumberOfFiles, multipleUploads = _a.multipleUploads;\n    var messageInput = useMessageInputContext('UploadsPreview');\n    var fileOrder = messageInput.fileOrder, fileUploads = messageInput.fileUploads, imageOrder = messageInput.imageOrder, imageUploads = messageInput.imageUploads, numberOfUploads = messageInput.numberOfUploads, removeFile = messageInput.removeFile, removeImage = messageInput.removeImage, uploadFile = messageInput.uploadFile, uploadImage = messageInput.uploadImage, uploadNewFiles = messageInput.uploadNewFiles;\n    var imagesToPreview = imageOrder.map(function (id) { return imageUploads[id]; });\n    var filesToPreview = fileOrder.map(function (id) { return fileUploads[id]; });\n    return (React.createElement(React.Fragment, null,\n        imageOrder.length > 0 && (React.createElement(ImagePreviewer, { disabled: !multipleUploads ||\n                (maxNumberOfFiles !== undefined && numberOfUploads >= maxNumberOfFiles), handleFiles: uploadNewFiles, handleRemove: removeImage, handleRetry: uploadImage, imageUploads: imagesToPreview, multiple: multipleUploads })),\n        fileOrder.length > 0 && (React.createElement(FilePreviewer, { handleFiles: uploadNewFiles, handleRemove: removeFile, handleRetry: uploadFile, uploads: filesToPreview }))));\n};\n"]},"metadata":{},"sourceType":"module"}