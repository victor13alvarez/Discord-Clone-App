{"ast":null,"code":"var _curry2 = /*#__PURE__*/require(\"./internal/_curry2.js\");\n\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable.js\");\n\nvar _filter = /*#__PURE__*/require(\"./internal/_filter.js\");\n\nvar _isObject = /*#__PURE__*/require(\"./internal/_isObject.js\");\n\nvar _reduce = /*#__PURE__*/require(\"./internal/_reduce.js\");\n\nvar _xfilter = /*#__PURE__*/require(\"./internal/_xfilter.js\");\n\nvar keys = /*#__PURE__*/require(\"./keys.js\");\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/filter', 'filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nmodule.exports = filter;","map":{"version":3,"sources":["C:/Users/Usuario/Documents/GitHub/discord-clone-app/client/node_modules/ramda/src/filter.js"],"names":["_curry2","require","_dispatchable","_filter","_isObject","_reduce","_xfilter","keys","filter","pred","filterable","acc","key","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GACX,aACAC,OAAO,CAAC,uBAAD,CAFP;;AAIA,IAAIC,aAAa,GACjB,aACAD,OAAO,CAAC,6BAAD,CAFP;;AAIA,IAAIE,OAAO,GACX,aACAF,OAAO,CAAC,uBAAD,CAFP;;AAIA,IAAIG,SAAS,GACb,aACAH,OAAO,CAAC,yBAAD,CAFP;;AAIA,IAAII,OAAO,GACX,aACAJ,OAAO,CAAC,uBAAD,CAFP;;AAIA,IAAIK,QAAQ,GACZ,aACAL,OAAO,CAAC,wBAAD,CAFP;;AAIA,IAAIM,IAAI,GACR,aACAN,OAAO,CAAC,WAAD,CAFP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIO,MAAM,GACV,aACAR,OAAO,EACP,aACAE,aAAa,CAAC,CAAC,qBAAD,EAAwB,QAAxB,CAAD,EAAoCI,QAApC,EAA8C,UAAUG,IAAV,EAAgBC,UAAhB,EAA4B;AACrF,SAAON,SAAS,CAACM,UAAD,CAAT,GAAwBL,OAAO,CAAC,UAAUM,GAAV,EAAeC,GAAf,EAAoB;AACzD,QAAIH,IAAI,CAACC,UAAU,CAACE,GAAD,CAAX,CAAR,EAA2B;AACzBD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWF,UAAU,CAACE,GAAD,CAArB;AACD;;AAED,WAAOD,GAAP;AACD,GANqC,EAMnC,EANmC,EAM/BJ,IAAI,CAACG,UAAD,CAN2B,CAA/B,GAMoB;AAC3BP,EAAAA,OAAO,CAACM,IAAD,EAAOC,UAAP,CAPP;AAQD,CATY,CAFN,CAFP;;AAeAG,MAAM,CAACC,OAAP,GAAiBN,MAAjB","sourcesContent":["var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2.js\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable.js\");\n\nvar _filter =\n/*#__PURE__*/\nrequire(\"./internal/_filter.js\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject.js\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce.js\");\n\nvar _xfilter =\n/*#__PURE__*/\nrequire(\"./internal/_xfilter.js\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys.js\");\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/filter', 'filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nmodule.exports = filter;"]},"metadata":{},"sourceType":"script"}