{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useEffect, useRef } from 'react';\nimport { FixedHeightMessage } from '../Message/FixedHeightMessage';\nimport { Message } from '../Message/Message';\nimport { MessageInput } from '../MessageInput/MessageInput';\nimport { MessageInputSmall } from '../MessageInput/MessageInputSmall';\nimport { MessageList } from '../MessageList/MessageList';\nimport { VirtualizedMessageList } from '../MessageList/VirtualizedMessageList';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n/**\n * The Thread component renders a parent Message with a list of replies\n */\n\nexport var Thread = function (props) {\n  var _a = useChannelStateContext('Thread'),\n      channel = _a.channel,\n      channelConfig = _a.channelConfig,\n      thread = _a.thread;\n\n  if (!thread || (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.replies) === false) return null; // The wrapper ensures a key variable is set and the component recreates on thread switch\n\n  return React.createElement(ThreadInner, __assign({}, props, {\n    key: \"thread-\" + thread.id + \"-\" + (channel === null || channel === void 0 ? void 0 : channel.cid)\n  }));\n};\n\nvar DefaultThreadHeader = function (props) {\n  var closeThread = props.closeThread,\n      thread = props.thread;\n  var t = useTranslationContext('Thread').t;\n\n  var getReplyCount = function () {\n    if (!thread.reply_count) return '';\n    return t('replyCount', {\n      count: thread.reply_count\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: 'str-chat__thread-header'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__thread-header-details'\n  }, React.createElement(\"strong\", null, t('Thread')), React.createElement(\"small\", null, getReplyCount())), React.createElement(\"button\", {\n    \"aria-label\": 'Close thread',\n    className: 'str-chat__square-button',\n    \"data-testid\": 'close-button',\n    onClick: function (event) {\n      return closeThread(event);\n    }\n  }, React.createElement(\"svg\", {\n    height: '10',\n    width: '10',\n    xmlns: 'http://www.w3.org/2000/svg'\n  }, React.createElement(\"path\", {\n    d: 'M9.916 1.027L8.973.084 5 4.058 1.027.084l-.943.943L4.058 5 .084 8.973l.943.943L5 5.942l3.973 3.974.943-.943L5.942 5z',\n    fillRule: 'evenodd'\n  }))));\n};\n\nvar DefaultThreadStart = function () {\n  var t = useTranslationContext('Thread').t;\n  return React.createElement(\"div\", {\n    className: 'str-chat__thread-start'\n  }, t('Start of a new thread'));\n};\n\nvar ThreadInner = function (props) {\n  var additionalMessageInputProps = props.additionalMessageInputProps,\n      additionalMessageListProps = props.additionalMessageListProps,\n      additionalParentMessageProps = props.additionalParentMessageProps,\n      additionalVirtualizedMessageListProps = props.additionalVirtualizedMessageListProps,\n      _a = props.autoFocus,\n      autoFocus = _a === void 0 ? true : _a,\n      _b = props.enableDateSeparator,\n      enableDateSeparator = _b === void 0 ? false : _b,\n      _c = props.fullWidth,\n      fullWidth = _c === void 0 ? false : _c,\n      PropInput = props.Input,\n      PropMessage = props.Message,\n      virtualized = props.virtualized;\n\n  var _d = useChannelStateContext('Thread'),\n      thread = _d.thread,\n      threadHasMore = _d.threadHasMore,\n      threadLoadingMore = _d.threadLoadingMore,\n      threadMessages = _d.threadMessages;\n\n  var _e = useChannelActionContext('Thread'),\n      closeThread = _e.closeThread,\n      loadMoreThread = _e.loadMoreThread;\n\n  var customClasses = useChatContext('Thread').customClasses;\n\n  var _f = useComponentContext('Thread'),\n      ContextInput = _f.ThreadInput,\n      ContextMessage = _f.Message,\n      _g = _f.ThreadHeader,\n      ThreadHeader = _g === void 0 ? DefaultThreadHeader : _g,\n      _h = _f.ThreadStart,\n      ThreadStart = _h === void 0 ? DefaultThreadStart : _h,\n      _j = _f.VirtualMessage,\n      VirtualMessage = _j === void 0 ? FixedHeightMessage : _j;\n\n  var messageList = useRef(null);\n  var ThreadInput = PropInput || (additionalMessageInputProps === null || additionalMessageInputProps === void 0 ? void 0 : additionalMessageInputProps.Input) || ContextInput || MessageInputSmall;\n  var ThreadMessage = PropMessage || (additionalMessageListProps === null || additionalMessageListProps === void 0 ? void 0 : additionalMessageListProps.Message);\n  var FallbackMessage = virtualized ? VirtualMessage : ContextMessage;\n  var ThreadMessageList = virtualized ? VirtualizedMessageList : MessageList;\n  useEffect(function () {\n    if ((thread === null || thread === void 0 ? void 0 : thread.id) && (thread === null || thread === void 0 ? void 0 : thread.reply_count)) {\n      loadMoreThread();\n    }\n  }, []);\n  useEffect(function () {\n    if (messageList.current && (threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length)) {\n      var _a = messageList.current,\n          clientHeight = _a.clientHeight,\n          scrollHeight = _a.scrollHeight,\n          scrollTop = _a.scrollTop;\n      var scrollDown = clientHeight + scrollTop !== scrollHeight;\n\n      if (scrollDown) {\n        messageList.current.scrollTop = scrollHeight - clientHeight;\n      }\n    }\n  }, [threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length]);\n  if (!thread) return null;\n  var threadClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.thread) || 'str-chat__thread';\n  return React.createElement(\"div\", {\n    className: threadClass + \" \" + (fullWidth ? 'str-chat__thread--full' : '')\n  }, React.createElement(ThreadHeader, {\n    closeThread: closeThread,\n    thread: thread\n  }), React.createElement(\"div\", {\n    className: 'str-chat__thread-list',\n    ref: messageList\n  }, React.createElement(Message, __assign({\n    initialMessage: true,\n    message: thread,\n    Message: ThreadMessage || FallbackMessage,\n    threadList: true\n  }, additionalParentMessageProps)), React.createElement(ThreadStart, null), React.createElement(ThreadMessageList, __assign({\n    disableDateSeparator: !enableDateSeparator,\n    hasMore: threadHasMore,\n    loadingMore: threadLoadingMore,\n    loadMore: loadMoreThread,\n    Message: ThreadMessage || FallbackMessage,\n    messages: threadMessages || [],\n    threadList: true\n  }, virtualized ? additionalVirtualizedMessageListProps : additionalMessageListProps))), React.createElement(MessageInput, __assign({\n    focus: autoFocus,\n    Input: ThreadInput,\n    parent: thread,\n    publishTypingEvent: false\n  }, additionalMessageInputProps)));\n};","map":{"version":3,"sources":["C:/Users/Usuario/Documents/GitHub/discord-clone-app/client/node_modules/stream-chat-react/dist/components/Thread/Thread.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useEffect","useRef","FixedHeightMessage","Message","MessageInput","MessageInputSmall","MessageList","VirtualizedMessageList","useChannelActionContext","useChannelStateContext","useChatContext","useComponentContext","useTranslationContext","Thread","props","_a","channel","channelConfig","thread","replies","createElement","ThreadInner","key","id","cid","DefaultThreadHeader","closeThread","getReplyCount","reply_count","count","className","onClick","event","height","width","xmlns","d","fillRule","DefaultThreadStart","additionalMessageInputProps","additionalMessageListProps","additionalParentMessageProps","additionalVirtualizedMessageListProps","autoFocus","_b","enableDateSeparator","_c","fullWidth","PropInput","Input","PropMessage","virtualized","_d","threadHasMore","threadLoadingMore","threadMessages","_e","loadMoreThread","customClasses","_f","ContextInput","ThreadInput","ContextMessage","_g","ThreadHeader","_h","ThreadStart","_j","VirtualMessage","messageList","ThreadMessage","FallbackMessage","ThreadMessageList","current","clientHeight","scrollHeight","scrollTop","scrollDown","threadClass","ref","initialMessage","message","threadList","disableDateSeparator","hasMore","loadingMore","loadMore","messages","focus","parent","publishTypingEvent"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useEffect, useRef } from 'react';\nimport { FixedHeightMessage } from '../Message/FixedHeightMessage';\nimport { Message } from '../Message/Message';\nimport { MessageInput } from '../MessageInput/MessageInput';\nimport { MessageInputSmall } from '../MessageInput/MessageInputSmall';\nimport { MessageList } from '../MessageList/MessageList';\nimport { VirtualizedMessageList, } from '../MessageList/VirtualizedMessageList';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n/**\n * The Thread component renders a parent Message with a list of replies\n */\nexport var Thread = function (props) {\n    var _a = useChannelStateContext('Thread'), channel = _a.channel, channelConfig = _a.channelConfig, thread = _a.thread;\n    if (!thread || (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.replies) === false)\n        return null;\n    // The wrapper ensures a key variable is set and the component recreates on thread switch\n    return React.createElement(ThreadInner, __assign({}, props, { key: \"thread-\" + thread.id + \"-\" + (channel === null || channel === void 0 ? void 0 : channel.cid) }));\n};\nvar DefaultThreadHeader = function (props) {\n    var closeThread = props.closeThread, thread = props.thread;\n    var t = useTranslationContext('Thread').t;\n    var getReplyCount = function () {\n        if (!thread.reply_count)\n            return '';\n        return t('replyCount', { count: thread.reply_count });\n    };\n    return (React.createElement(\"div\", { className: 'str-chat__thread-header' },\n        React.createElement(\"div\", { className: 'str-chat__thread-header-details' },\n            React.createElement(\"strong\", null, t('Thread')),\n            React.createElement(\"small\", null, getReplyCount())),\n        React.createElement(\"button\", { \"aria-label\": 'Close thread', className: 'str-chat__square-button', \"data-testid\": 'close-button', onClick: function (event) { return closeThread(event); } },\n            React.createElement(\"svg\", { height: '10', width: '10', xmlns: 'http://www.w3.org/2000/svg' },\n                React.createElement(\"path\", { d: 'M9.916 1.027L8.973.084 5 4.058 1.027.084l-.943.943L4.058 5 .084 8.973l.943.943L5 5.942l3.973 3.974.943-.943L5.942 5z', fillRule: 'evenodd' })))));\n};\nvar DefaultThreadStart = function () {\n    var t = useTranslationContext('Thread').t;\n    return React.createElement(\"div\", { className: 'str-chat__thread-start' }, t('Start of a new thread'));\n};\nvar ThreadInner = function (props) {\n    var additionalMessageInputProps = props.additionalMessageInputProps, additionalMessageListProps = props.additionalMessageListProps, additionalParentMessageProps = props.additionalParentMessageProps, additionalVirtualizedMessageListProps = props.additionalVirtualizedMessageListProps, _a = props.autoFocus, autoFocus = _a === void 0 ? true : _a, _b = props.enableDateSeparator, enableDateSeparator = _b === void 0 ? false : _b, _c = props.fullWidth, fullWidth = _c === void 0 ? false : _c, PropInput = props.Input, PropMessage = props.Message, virtualized = props.virtualized;\n    var _d = useChannelStateContext('Thread'), thread = _d.thread, threadHasMore = _d.threadHasMore, threadLoadingMore = _d.threadLoadingMore, threadMessages = _d.threadMessages;\n    var _e = useChannelActionContext('Thread'), closeThread = _e.closeThread, loadMoreThread = _e.loadMoreThread;\n    var customClasses = useChatContext('Thread').customClasses;\n    var _f = useComponentContext('Thread'), ContextInput = _f.ThreadInput, ContextMessage = _f.Message, _g = _f.ThreadHeader, ThreadHeader = _g === void 0 ? DefaultThreadHeader : _g, _h = _f.ThreadStart, ThreadStart = _h === void 0 ? DefaultThreadStart : _h, _j = _f.VirtualMessage, VirtualMessage = _j === void 0 ? FixedHeightMessage : _j;\n    var messageList = useRef(null);\n    var ThreadInput = PropInput || (additionalMessageInputProps === null || additionalMessageInputProps === void 0 ? void 0 : additionalMessageInputProps.Input) || ContextInput || MessageInputSmall;\n    var ThreadMessage = PropMessage || (additionalMessageListProps === null || additionalMessageListProps === void 0 ? void 0 : additionalMessageListProps.Message);\n    var FallbackMessage = virtualized ? VirtualMessage : ContextMessage;\n    var ThreadMessageList = virtualized ? VirtualizedMessageList : MessageList;\n    useEffect(function () {\n        if ((thread === null || thread === void 0 ? void 0 : thread.id) && (thread === null || thread === void 0 ? void 0 : thread.reply_count)) {\n            loadMoreThread();\n        }\n    }, []);\n    useEffect(function () {\n        if (messageList.current && (threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length)) {\n            var _a = messageList.current, clientHeight = _a.clientHeight, scrollHeight = _a.scrollHeight, scrollTop = _a.scrollTop;\n            var scrollDown = clientHeight + scrollTop !== scrollHeight;\n            if (scrollDown) {\n                messageList.current.scrollTop = scrollHeight - clientHeight;\n            }\n        }\n    }, [threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length]);\n    if (!thread)\n        return null;\n    var threadClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.thread) || 'str-chat__thread';\n    return (React.createElement(\"div\", { className: threadClass + \" \" + (fullWidth ? 'str-chat__thread--full' : '') },\n        React.createElement(ThreadHeader, { closeThread: closeThread, thread: thread }),\n        React.createElement(\"div\", { className: 'str-chat__thread-list', ref: messageList },\n            React.createElement(Message, __assign({ initialMessage: true, message: thread, Message: ThreadMessage || FallbackMessage, threadList: true }, additionalParentMessageProps)),\n            React.createElement(ThreadStart, null),\n            React.createElement(ThreadMessageList, __assign({ disableDateSeparator: !enableDateSeparator, hasMore: threadHasMore, loadingMore: threadLoadingMore, loadMore: loadMoreThread, Message: ThreadMessage || FallbackMessage, messages: threadMessages || [], threadList: true }, (virtualized ? additionalVirtualizedMessageListProps : additionalMessageListProps)))),\n        React.createElement(MessageInput, __assign({ focus: autoFocus, Input: ThreadInput, parent: thread, publishTypingEvent: false }, additionalMessageInputProps))));\n};\n"]},"metadata":{},"sourceType":"module"}