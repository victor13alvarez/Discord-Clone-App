{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { CooldownTimer as DefaultCooldownTimer } from './hooks/useCooldownTimer';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIconFlat as DefaultFileUploadIcon, SendButton as DefaultSendButton } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { QuotedMessagePreview as DefaultQuotedMessagePreview } from './QuotedMessagePreview';\nexport var MessageInputSmall = function () {\n  var _a = useChannelStateContext('MessageInputSmall'),\n      acceptedFiles = _a.acceptedFiles,\n      multipleUploads = _a.multipleUploads,\n      quotedMessage = _a.quotedMessage;\n\n  var setQuotedMessage = useChannelActionContext('MessageInputSmall').setQuotedMessage;\n  var t = useTranslationContext('MessageInputSmall').t;\n  var channel = useChatContext('MessageInputSmall').channel;\n\n  var _b = useMessageInputContext('MessageInputSmall'),\n      closeEmojiPicker = _b.closeEmojiPicker,\n      cooldownRemaining = _b.cooldownRemaining,\n      emojiPickerIsOpen = _b.emojiPickerIsOpen,\n      handleSubmit = _b.handleSubmit,\n      isUploadEnabled = _b.isUploadEnabled,\n      maxFilesLeft = _b.maxFilesLeft,\n      numberOfUploads = _b.numberOfUploads,\n      openEmojiPicker = _b.openEmojiPicker,\n      setCooldownRemaining = _b.setCooldownRemaining,\n      uploadNewFiles = _b.uploadNewFiles;\n\n  var _c = useComponentContext('MessageInputSmall'),\n      _d = _c.CooldownTimer,\n      CooldownTimer = _d === void 0 ? DefaultCooldownTimer : _d,\n      _e = _c.EmojiIcon,\n      EmojiIcon = _e === void 0 ? DefaultEmojiIcon : _e,\n      _f = _c.FileUploadIcon,\n      FileUploadIcon = _f === void 0 ? DefaultFileUploadIcon : _f,\n      _g = _c.SendButton,\n      SendButton = _g === void 0 ? DefaultSendButton : _g,\n      _h = _c.QuotedMessagePreview,\n      QuotedMessagePreview = _h === void 0 ? DefaultQuotedMessagePreview : _h;\n\n  useEffect(function () {\n    var handleQuotedMessageUpdate = function (e) {\n      var _a;\n\n      if (!(quotedMessage && ((_a = e.message) === null || _a === void 0 ? void 0 : _a.id) === quotedMessage.id)) return;\n\n      if (e.type === 'message.deleted') {\n        setQuotedMessage(undefined);\n        return;\n      }\n\n      setQuotedMessage(e.message);\n    };\n\n    channel === null || channel === void 0 ? void 0 : channel.on('message.deleted', handleQuotedMessageUpdate);\n    channel === null || channel === void 0 ? void 0 : channel.on('message.updated', handleQuotedMessageUpdate);\n    return function () {\n      channel === null || channel === void 0 ? void 0 : channel.off('message.deleted', handleQuotedMessageUpdate);\n      channel === null || channel === void 0 ? void 0 : channel.off('message.updated', handleQuotedMessageUpdate);\n    };\n  }, [channel, quotedMessage]);\n  return React.createElement(\"div\", {\n    className: 'str-chat__small-message-input__wrapper'\n  }, React.createElement(ImageDropzone, {\n    accept: acceptedFiles,\n    disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining,\n    handleFiles: uploadNewFiles,\n    maxNumberOfFiles: maxFilesLeft,\n    multiple: multipleUploads\n  }, React.createElement(\"div\", {\n    className: \"str-chat__small-message-input \" + (SendButton ? 'str-chat__small-message-input--send-button-active' : '') + \" \" + (quotedMessage && quotedMessage.parent_id ? 'str-chat__input-flat-quoted' : '') + \" \" + (numberOfUploads ? 'str-chat__small-message-input-has-attachments' : '') + \" \"\n  }, quotedMessage && quotedMessage.parent_id && React.createElement(QuotedMessagePreview, {\n    quotedMessage: quotedMessage\n  }), isUploadEnabled && React.createElement(UploadsPreview, null), React.createElement(\"div\", {\n    className: 'str-chat__small-message-input--textarea-wrapper'\n  }, React.createElement(ChatAutoComplete, null), cooldownRemaining ? React.createElement(\"div\", {\n    className: 'str-chat__input-small-cooldown'\n  }, React.createElement(CooldownTimer, {\n    cooldownInterval: cooldownRemaining,\n    setCooldownRemaining: setCooldownRemaining\n  })) : React.createElement(React.Fragment, null, isUploadEnabled && React.createElement(\"div\", {\n    className: 'str-chat__fileupload-wrapper',\n    \"data-testid\": 'fileinput'\n  }, React.createElement(Tooltip, null, maxFilesLeft ? t('Attach files') : t(\"You've reached the maximum number of files\")), React.createElement(FileUploadButton, {\n    accepts: acceptedFiles,\n    disabled: maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    multiple: multipleUploads\n  }, React.createElement(\"span\", {\n    className: 'str-chat__small-message-input-fileupload'\n  }, React.createElement(FileUploadIcon, null)))), React.createElement(\"div\", {\n    className: 'str-chat__emojiselect-wrapper'\n  }, React.createElement(Tooltip, null, emojiPickerIsOpen ? t('Close emoji picker') : t('Open emoji picker')), React.createElement(\"button\", {\n    \"aria-label\": 'Emoji picker',\n    className: 'str-chat__small-message-input-emojiselect',\n    onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker\n  }, React.createElement(EmojiIcon, null)))), React.createElement(EmojiPicker, {\n    small: true\n  })), !cooldownRemaining && React.createElement(SendButton, {\n    sendMessage: handleSubmit\n  }))));\n};","map":{"version":3,"sources":["C:/Users/Usuario/Documents/GitHub/discord-clone-app/client/node_modules/stream-chat-react/dist/components/MessageInput/MessageInputSmall.js"],"names":["React","useEffect","FileUploadButton","ImageDropzone","EmojiPicker","CooldownTimer","DefaultCooldownTimer","EmojiIconSmall","DefaultEmojiIcon","FileUploadIconFlat","DefaultFileUploadIcon","SendButton","DefaultSendButton","UploadsPreview","ChatAutoComplete","Tooltip","useChatContext","useChannelActionContext","useChannelStateContext","useTranslationContext","useMessageInputContext","useComponentContext","QuotedMessagePreview","DefaultQuotedMessagePreview","MessageInputSmall","_a","acceptedFiles","multipleUploads","quotedMessage","setQuotedMessage","t","channel","_b","closeEmojiPicker","cooldownRemaining","emojiPickerIsOpen","handleSubmit","isUploadEnabled","maxFilesLeft","numberOfUploads","openEmojiPicker","setCooldownRemaining","uploadNewFiles","_c","_d","_e","EmojiIcon","_f","FileUploadIcon","_g","_h","handleQuotedMessageUpdate","e","message","id","type","undefined","on","off","createElement","className","accept","disabled","handleFiles","maxNumberOfFiles","multiple","parent_id","cooldownInterval","Fragment","accepts","onClick","small","sendMessage"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { CooldownTimer as DefaultCooldownTimer } from './hooks/useCooldownTimer';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIconFlat as DefaultFileUploadIcon, SendButton as DefaultSendButton, } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { QuotedMessagePreview as DefaultQuotedMessagePreview } from './QuotedMessagePreview';\nexport var MessageInputSmall = function () {\n    var _a = useChannelStateContext('MessageInputSmall'), acceptedFiles = _a.acceptedFiles, multipleUploads = _a.multipleUploads, quotedMessage = _a.quotedMessage;\n    var setQuotedMessage = useChannelActionContext('MessageInputSmall').setQuotedMessage;\n    var t = useTranslationContext('MessageInputSmall').t;\n    var channel = useChatContext('MessageInputSmall').channel;\n    var _b = useMessageInputContext('MessageInputSmall'), closeEmojiPicker = _b.closeEmojiPicker, cooldownRemaining = _b.cooldownRemaining, emojiPickerIsOpen = _b.emojiPickerIsOpen, handleSubmit = _b.handleSubmit, isUploadEnabled = _b.isUploadEnabled, maxFilesLeft = _b.maxFilesLeft, numberOfUploads = _b.numberOfUploads, openEmojiPicker = _b.openEmojiPicker, setCooldownRemaining = _b.setCooldownRemaining, uploadNewFiles = _b.uploadNewFiles;\n    var _c = useComponentContext('MessageInputSmall'), _d = _c.CooldownTimer, CooldownTimer = _d === void 0 ? DefaultCooldownTimer : _d, _e = _c.EmojiIcon, EmojiIcon = _e === void 0 ? DefaultEmojiIcon : _e, _f = _c.FileUploadIcon, FileUploadIcon = _f === void 0 ? DefaultFileUploadIcon : _f, _g = _c.SendButton, SendButton = _g === void 0 ? DefaultSendButton : _g, _h = _c.QuotedMessagePreview, QuotedMessagePreview = _h === void 0 ? DefaultQuotedMessagePreview : _h;\n    useEffect(function () {\n        var handleQuotedMessageUpdate = function (e) {\n            var _a;\n            if (!(quotedMessage && ((_a = e.message) === null || _a === void 0 ? void 0 : _a.id) === quotedMessage.id))\n                return;\n            if (e.type === 'message.deleted') {\n                setQuotedMessage(undefined);\n                return;\n            }\n            setQuotedMessage(e.message);\n        };\n        channel === null || channel === void 0 ? void 0 : channel.on('message.deleted', handleQuotedMessageUpdate);\n        channel === null || channel === void 0 ? void 0 : channel.on('message.updated', handleQuotedMessageUpdate);\n        return function () {\n            channel === null || channel === void 0 ? void 0 : channel.off('message.deleted', handleQuotedMessageUpdate);\n            channel === null || channel === void 0 ? void 0 : channel.off('message.updated', handleQuotedMessageUpdate);\n        };\n    }, [channel, quotedMessage]);\n    return (React.createElement(\"div\", { className: 'str-chat__small-message-input__wrapper' },\n        React.createElement(ImageDropzone, { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads },\n            React.createElement(\"div\", { className: \"str-chat__small-message-input \" + (SendButton ? 'str-chat__small-message-input--send-button-active' : '') + \" \" + (quotedMessage && quotedMessage.parent_id ? 'str-chat__input-flat-quoted' : '') + \" \" + (numberOfUploads ? 'str-chat__small-message-input-has-attachments' : '') + \" \" },\n                quotedMessage && quotedMessage.parent_id && (React.createElement(QuotedMessagePreview, { quotedMessage: quotedMessage })),\n                isUploadEnabled && React.createElement(UploadsPreview, null),\n                React.createElement(\"div\", { className: 'str-chat__small-message-input--textarea-wrapper' },\n                    React.createElement(ChatAutoComplete, null),\n                    cooldownRemaining ? (React.createElement(\"div\", { className: 'str-chat__input-small-cooldown' },\n                        React.createElement(CooldownTimer, { cooldownInterval: cooldownRemaining, setCooldownRemaining: setCooldownRemaining }))) : (React.createElement(React.Fragment, null,\n                        isUploadEnabled && (React.createElement(\"div\", { className: 'str-chat__fileupload-wrapper', \"data-testid\": 'fileinput' },\n                            React.createElement(Tooltip, null, maxFilesLeft\n                                ? t('Attach files')\n                                : t(\"You've reached the maximum number of files\")),\n                            React.createElement(FileUploadButton, { accepts: acceptedFiles, disabled: maxFilesLeft === 0, handleFiles: uploadNewFiles, multiple: multipleUploads },\n                                React.createElement(\"span\", { className: 'str-chat__small-message-input-fileupload' },\n                                    React.createElement(FileUploadIcon, null))))),\n                        React.createElement(\"div\", { className: 'str-chat__emojiselect-wrapper' },\n                            React.createElement(Tooltip, null, emojiPickerIsOpen ? t('Close emoji picker') : t('Open emoji picker')),\n                            React.createElement(\"button\", { \"aria-label\": 'Emoji picker', className: 'str-chat__small-message-input-emojiselect', onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker },\n                                React.createElement(EmojiIcon, null))))),\n                    React.createElement(EmojiPicker, { small: true })),\n                !cooldownRemaining && React.createElement(SendButton, { sendMessage: handleSubmit })))));\n};\n"]},"metadata":{},"sourceType":"module"}